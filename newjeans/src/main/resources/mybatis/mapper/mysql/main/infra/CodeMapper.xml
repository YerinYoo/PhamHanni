<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bunnies.infra.code.CodeDao">

    <resultMap id="resultMapObj" type="com.bunnies.infra.code.CodeDto"></resultMap>
	
	<!-- Code 테이블에서 select문을 사용할 때 공통적으로 사용되는 구문 / 검색 포함 -->
	<sql id="selectCommonCode">
		FROM code a
		LEFT JOIN codegroup b on b.codegroupSeq = a.codegroupSeqF
		WHERE 1=1
		<if test="voDelNY != null and !voDelNY.equals('')">AND a.codeDelNY = #{voDelNY}</if>

		<choose>
			<when test="voOptionDate == 1">AND a.codeRegDate BETWEEN #{voDateStart} AND
				#{voDateEnd}</when>
			<when test="voOptionDate == 2">AND a.codeModDate BETWEEN #{voDateStart} AND
				#{voDateEnd}</when>
		</choose>

		<choose>
			<when test="voOption == 1">AND a.codeSeq = #{voValue}</when>
			<when test="voOption == 2">AND a.codeName LIKE CONCAT('%',#{voValue},'%')</when>
		</choose>
	</sql>

	<!-- Code에 해당하는 데이터 개수 반환 쿼리 -->
	<select id="selectCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommonCode" />
	</select>
	
	<!-- 리스트 반환 쿼리 -->
	<!-- 페이지네이션 처리가 된 리스트를 반환하는 쿼리 -->
	<select id="selectListWithPaging" resultMap="resultMapObj">
		<include refid="base.selectListUpperForMysql" />
		select
			a.codegroupSeqF
			,b.codegroupName as CodeGroupName
			,a.codeDelNY
			,a.codeSeq
			,a.codeName
			,a.codeRegDate
			,a.codeModDate
		<include refid="selectCommonCode" />
		ORDER BY a.codeSeq asc, a.codeName, a.codeSeq
		<include refid="base.selectListLowerForMysql" />
	</select>

	
	<!-- 페이지네이션 처리를 거치지 않은 리스트 반환 -->
	<select id="selectListWithoutPaging" resultMap="resultMapObj">
	    select
	    codeSeq,
	    codeName,
	    codeRegDate,
	    codeModDate,
	    codeDelNY,
	    codegroupSeqF
	    from code
	    where 1=1
	    AND codeDelNY=0
	</select>


	<!-- 리스트 중 셀렉된 한 가지 데이터 반환 -->
	<select id="selectOne" resultMap="resultMapObj">
		select
		codeSeq
		,codeName
		,codeDelNY
		,codeModDate
		,codeRegDate
		From code
		where 1=1
		and codeSeq=#{codeSeq}
	</select>

	<!-- 메서드 관련 쿼리 정의 -->
	<insert id="insert">
		insert into code(
		codeName
		,codeDelNY
		,codegroupSeqF
		,codeRegDate
		,codeModDate
		)values(
		#{codeName}
		,0
		,#{codegroupSeqF}
		,now()
		,now()
		)
		<!-- 값이 들어가는 순간 해당 시퀀스 값을 반환하여, 이후에 추가된 데이터의 View를 열람하기 위함 -->
		<selectKey resultType="String" keyProperty="codeSeq" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE code
		SET
		codeName=#{codeName}
		,codegroupSeqF=#{codegroupSeqF}
		where 1=1
		and codeSeq=#{codeSeq}
	</update>

	<update id="uelete">
		update code
		set
		codeDelNY=1
		where 1=1
		and codeSeq = #{codeSeq}
	</update>

	<delete id="delete">
		delete From code
		where 1=1
		and codeSeq=#{codeSeq}
	</delete>

	<!-- 공통 코드를 캐시화하여 사용하기 위한 쿼리 -->
	<select id="selectListCachedCodeArrayList"
		resultMap="resultMapObj">
		SELECT
		codeSeq
		, codeName
		, codegroupSeqF
		FROM
		code
		WHERE 1=1
		AND codeDelNY = 0
	</select>
	
  </mapper>